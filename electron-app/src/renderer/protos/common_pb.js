// source: protos/common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.kubeconfig.CommonReq', null, global);
goog.exportSymbol('proto.kubeconfig.CommonRes', null, global);
goog.exportSymbol('proto.kubeconfig.ResultCode', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.CommonReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.CommonReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.CommonReq.displayName = 'proto.kubeconfig.CommonReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.CommonRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.CommonRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.CommonRes.displayName = 'proto.kubeconfig.CommonRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.CommonReq.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.CommonReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.CommonReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.CommonReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.CommonReq}
 */
proto.kubeconfig.CommonReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.CommonReq;
  return proto.kubeconfig.CommonReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.CommonReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.CommonReq}
 */
proto.kubeconfig.CommonReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.CommonReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.CommonReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.CommonReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.CommonReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.CommonRes.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.CommonRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.CommonRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.CommonRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.CommonRes}
 */
proto.kubeconfig.CommonRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.CommonRes;
  return proto.kubeconfig.CommonRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.CommonRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.CommonRes}
 */
proto.kubeconfig.CommonRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.kubeconfig.ResultCode} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.CommonRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.CommonRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.CommonRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.CommonRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ResultCode Status = 1;
 * @return {!proto.kubeconfig.ResultCode}
 */
proto.kubeconfig.CommonRes.prototype.getStatus = function() {
  return /** @type {!proto.kubeconfig.ResultCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.kubeconfig.ResultCode} value
 * @return {!proto.kubeconfig.CommonRes} returns this
 */
proto.kubeconfig.CommonRes.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.kubeconfig.CommonRes.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.CommonRes} returns this
 */
proto.kubeconfig.CommonRes.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.kubeconfig.ResultCode = {
  SUCCESS: 0,
  FAILED: 10001,
  UNKNOWN: 10002,
  INVALID_ARGUMENT: 10003,
  INVALID_PASSWORD: 10004,
  UNAUTHORIZED: 10005,
  INVALID_ACCOUNT: 10006,
  UNAVAILABLE: 10007,
  INTERNAL: 10008,
  CANCELED: 10009,
  NOT_FOUND: 10010,
  AUTH_TOKEN_EXPIRED: 10011,
  ALREADY_LINKED_PLATFORM_ID: 10012,
  NO_PERMISSION_ACCOUNT: 10013,
  RESTRICTED_LOGIN: 10014,
  BANNED: 10015,
  UNAUTHORIZED_EMAIL: 10016,
  DELETED_ACCOUNT: 10017,
  SERVER_BUSY: 10018,
  SERVER_SERVICE_OFF: 10019,
  SERVER_NOT_RESPONSE: 100002,
  SERVER_UNKNOWN: 100003,
  SERVER_ABORT: 100004,
  SERVER_NOT_FOUND: 100005,
  SERVER_INVALID_ARGUMENT: 100006,
  SERVER_OPERATION_FAILED: 100007,
  SERVER_ALREADY_EXISTS: 100008,
  SERVER_UNAUTHORIZED: 100009,
  SERVER_NO_PERMISSION: 100010,
  SERVER_INTERNAL: 100011,
  SERVER_DB_UPDATE_FAILED: 100012,
  SERVER_INVALID_GAME_SESSION: 100013
};

goog.object.extend(exports, proto.kubeconfig);
